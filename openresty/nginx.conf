http {
	upstream my_redis_server {
    # We will be injecting the IP of redis when we bring up this docker
		nchan_redis_server ${REDIS_HOST_PORT};
	}

	location = /events/auth {
		proxy_pass ${AUTHENTICATION_ENDPOINT};
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
		proxy_set_header X-Subscriber-Type $nchan_subscriber_type;
		proxy_set_header X-Publisher-Type $nchan_publisher_type;
		proxy_set_header X-Prev-Message-Id $nchan_prev_message_id;
		proxy_set_header X-Channel-Id $nchan_channel_id;
		proxy_set_header X-Original-URI $request_uri;
		proxy_set_header X-Forwarded-For $remote_addr;
	}

	location ~ /events/stats$ {
		nchan_redis_upstream_stats my_redis_cluster;
	}

	location /events/publish/(.*)$ {
		nchan_publisher;
	    
		# Object ID
		nchan_channel_id $i;
		
		# Socket authorization request
		nchan_authorize_request /auth;
		
		# Max timeout for message is 5 mins
		nchan_message_timeout 5m;
	    
    # Redis config goes here;
    nchan_use_redis on;
    nchan_redis_pass my_redis_server;
	}

	location /events/subscribe/(.*)$ {
		nchan_subscriber;
	    
		# Object ID
		nchan_channel_id $i;
		
		# Socket authorization request
		nchan_authorize_request /auth;
	    
    # Redis config goes here;
    nchan_use_redis on;
    nchan_redis_pass my_redis_server;
	}
}
